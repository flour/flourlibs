name: AllInOne

on:
  push:
    branches: [master, develop]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-latest]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 0
      - name: "Git Fetch Tags"
        run: git fetch --tags
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
      - name: "Go to libs folder"
        run: cd
      - name: "Dotnet Tool Restore"
        run: dotnet tool restore
      - name: "Dotnet Cake Build"
        run: dotnet cake --target=Build
      - name: "Dotnet Cake Test"
        run: dotnet cake --target=Test
      - name: "Dotnet Cake Pack"
        if: success()
        run: dotnet cake --target=Pack
      - name: "Publish Artefacts"
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.os}}
          path: "./nugets"

  push-nuget:
    name: "Push NuGet Packages"
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - name: "Download Artefact"
        uses: actions/download-artifact@v1
        with:
          name: "ubuntu-20.04"
          path: "./nugets"
      - name: Display structure of downloaded files
        run: ls -R
      - name: "Dotnet NuGet Push"
        run: ls ./nugets/ | grep nupkg | while read line ; do dotnet nuget push ./nugets/$line --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate ; done
